name: DEPLOY

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: 빌드 및 배포
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: 변경사항 검사 - User
        id: check_user_changes
        run: |
          if git diff --quiet HEAD^ HEAD ./apps/user; then
            echo "user_changed=false" >> $GITHUB_ENV
          else
            echo "user_changed=true" >> $GITHUB_ENV
          fi

      - name: 변경사항 검사 - Admin
        id: check_admin_changes
        run: |
          if git diff --quiet HEAD^ HEAD ./apps/admin; then
            echo "admin_changed=false" >> $GITHUB_ENV
          else
            echo "admin_changed=true" >> $GITHUB_ENV
          fi

      - name: 환경 변수 설정
        if: env.user_changed == 'true' || env.admin_changed == 'true'
        run: |
          echo "VITE_BASE_URL=$VITE_BASE_URL" >> .env.production
          echo "VITE_OAUTH_CLIENT_ID=$VITE_OAUTH_CLIENT_ID" >> .env.production
          echo "VITE_OAUTH_CLIENT_SECRET=$VITE_OAUTH_CLIENT_SECRET" >> .env.production
          echo "VITE_GA4_MEASUREMENT_ID=$VITE_GA4_MEASUREMENT_ID" >> .env.production
          echo "VITE_CHANNELTALK_PLUGIN_KEY" >> .env.production
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> .env.production
          echo "AWS_ACCESS_KEY_SECRET=$AWS_ACCESS_KEY_SECRET" >> .env.production
          echo "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION" >> .env.production
          echo "AWS_ROLE_TO_ASSUME=$AWS_ROLE_TO_ASSUME" >> .env.production
          echo "USER_BUCKET_NAME=$USER_BUCKET_NAME" >> .env.production
          echo "ADMIN_BUCKET_NAME=$ADMIN_BUCKET_NAME" >> .env.production
          echo "REMOTE_IP=$REMOTE_IP" >> .env.production
          echo "REMOTE_PRIVATE_KEY=$REMOTE_PRIVATE_KEY" >> .env.production
          echo "REMOTE_SSH_PORT=$REMOTE_SSH_PORT" >> .env.production
          echo "REMOTE_USER=$REMOTE_USER" >> .env.production
        env:
          VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
          VITE_OAUTH_CLIENT_ID: ${{ secrets.VITE_OAUTH_CLIENT_ID }}
          VITE_OAUTH_CLIENT_SECRET: ${{ secrets.VITE_OAUTH_CLIENT_SECRET }}
          VITE_GA4_MEASUREMENT_ID: ${{ secrets.VITE_GA4_MEASUREMENT_ID }}
          VITE_CHANNELTALK_PLUGIN_KEY: ${{ secrets.VITE_CHANNELTALK_PLUGIN_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACCESS_KEY_SECRET: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          USER_BUCKET_NAME: ${{ secrets.USER_BUCKET_NAME }}
          USER_DISTRIBUTION_ID: ${{ secrets.USER_DISTRIBUTION_ID }}
          ADMIN_DISTRIBUTION_ID: ${{ secrets.ADMIN_DISTRIBUTION_ID }}
          ADMIN_BUCKET_NAME: ${{ secrets.ADMIN_BUCKET_NAME }}
          REMOTE_IP: ${{ secrets.REMOTE_IP }}
          REMOTE_PRIVATE_KEY: ${{ secrets.REMOTE_PRIVATE_KEY }}
          REMOTE_SSH_PORT: ${{ secrets.REMOTE_SSH_PORT }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}

      - uses: pnpm/action-setup@v4
        name: pnpm을 설치합니다.
        if: env.user_changed == 'true' || env.admin_changed == 'true'
        with:
          run_install: false

      - name: Node.js를 설치합니다.
        uses: actions/setup-node@v4
        if: env.user_changed == 'true' || env.admin_changed == 'true'
        with:
          node-version: 20
          cache: 'pnpm'
      
      - name: 의존 패키지 설치
        run: pnpm install

      - name: 린트
        run: pnpm run lint

      - name: 타입 체크
        run: pnpm run type-check

      - name: 빌드 - User
        if: env.user_changed == 'true'
        run: pnpm -F user run build

      - name: 빌드 - Admin
        if: env.admin_changed == 'true'
        run: pnpm -F admin run build

      - name: AWS Credential 설정
        if: env.user_changed == 'true' || env.admin_changed == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION}}
          output-credentials: true
      
      - name: S3에 배포 - User
        if: env.user_changed == 'true'
        run: |
          aws s3 sync \
            ./apps/user/dist s3://${{ secrets.USER_BUCKET_NAME }}

      - name: S3에 배포 - Admin
        if: env.admin_changed == 'true'
        run: |
          aws s3 sync \
            ./apps/admin/dist s3://${{ secrets.ADMIN_BUCKET_NAME }}