/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SubscriptionIndexImport } from './routes/subscription/index'
import { Route as StudiesIndexImport } from './routes/studies/index'
import { Route as MessageIndexImport } from './routes/message/index'
import { Route as MembersIndexImport } from './routes/members/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as SubscriptionFileImport } from './routes/subscription/file'
import { Route as StudiesMeImport } from './routes/studies/me'
import { Route as StudiesApproveImport } from './routes/studies/approve'
import { Route as StudiesApplicationsImport } from './routes/studies/applications'
import { Route as StudiesAcceptImport } from './routes/studies/accept'
import { Route as PostsFaqsImport } from './routes/posts/faqs'
import { Route as PostsAnnouncementsImport } from './routes/posts/announcements'
import { Route as MembersAttendanceImport } from './routes/members/attendance'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SubscriptionIndexRoute = SubscriptionIndexImport.update({
  path: '/subscription/',
  getParentRoute: () => rootRoute,
} as any)

const StudiesIndexRoute = StudiesIndexImport.update({
  path: '/studies/',
  getParentRoute: () => rootRoute,
} as any)

const MessageIndexRoute = MessageIndexImport.update({
  path: '/message/',
  getParentRoute: () => rootRoute,
} as any)

const MembersIndexRoute = MembersIndexImport.update({
  path: '/members/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const SubscriptionFileRoute = SubscriptionFileImport.update({
  path: '/subscription/file',
  getParentRoute: () => rootRoute,
} as any)

const StudiesMeRoute = StudiesMeImport.update({
  path: '/studies/me',
  getParentRoute: () => rootRoute,
} as any)

const StudiesApproveRoute = StudiesApproveImport.update({
  path: '/studies/approve',
  getParentRoute: () => rootRoute,
} as any)

const StudiesApplicationsRoute = StudiesApplicationsImport.update({
  path: '/studies/applications',
  getParentRoute: () => rootRoute,
} as any)

const StudiesAcceptRoute = StudiesAcceptImport.update({
  path: '/studies/accept',
  getParentRoute: () => rootRoute,
} as any)

const PostsFaqsRoute = PostsFaqsImport.update({
  path: '/posts/faqs',
  getParentRoute: () => rootRoute,
} as any)

const PostsAnnouncementsRoute = PostsAnnouncementsImport.update({
  path: '/posts/announcements',
  getParentRoute: () => rootRoute,
} as any)

const MembersAttendanceRoute = MembersAttendanceImport.update({
  path: '/members/attendance',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/members/attendance': {
      id: '/members/attendance'
      path: '/members/attendance'
      fullPath: '/members/attendance'
      preLoaderRoute: typeof MembersAttendanceImport
      parentRoute: typeof rootRoute
    }
    '/posts/announcements': {
      id: '/posts/announcements'
      path: '/posts/announcements'
      fullPath: '/posts/announcements'
      preLoaderRoute: typeof PostsAnnouncementsImport
      parentRoute: typeof rootRoute
    }
    '/posts/faqs': {
      id: '/posts/faqs'
      path: '/posts/faqs'
      fullPath: '/posts/faqs'
      preLoaderRoute: typeof PostsFaqsImport
      parentRoute: typeof rootRoute
    }
    '/studies/accept': {
      id: '/studies/accept'
      path: '/studies/accept'
      fullPath: '/studies/accept'
      preLoaderRoute: typeof StudiesAcceptImport
      parentRoute: typeof rootRoute
    }
    '/studies/applications': {
      id: '/studies/applications'
      path: '/studies/applications'
      fullPath: '/studies/applications'
      preLoaderRoute: typeof StudiesApplicationsImport
      parentRoute: typeof rootRoute
    }
    '/studies/approve': {
      id: '/studies/approve'
      path: '/studies/approve'
      fullPath: '/studies/approve'
      preLoaderRoute: typeof StudiesApproveImport
      parentRoute: typeof rootRoute
    }
    '/studies/me': {
      id: '/studies/me'
      path: '/studies/me'
      fullPath: '/studies/me'
      preLoaderRoute: typeof StudiesMeImport
      parentRoute: typeof rootRoute
    }
    '/subscription/file': {
      id: '/subscription/file'
      path: '/subscription/file'
      fullPath: '/subscription/file'
      preLoaderRoute: typeof SubscriptionFileImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/members/': {
      id: '/members/'
      path: '/members'
      fullPath: '/members'
      preLoaderRoute: typeof MembersIndexImport
      parentRoute: typeof rootRoute
    }
    '/message/': {
      id: '/message/'
      path: '/message'
      fullPath: '/message'
      preLoaderRoute: typeof MessageIndexImport
      parentRoute: typeof rootRoute
    }
    '/studies/': {
      id: '/studies/'
      path: '/studies'
      fullPath: '/studies'
      preLoaderRoute: typeof StudiesIndexImport
      parentRoute: typeof rootRoute
    }
    '/subscription/': {
      id: '/subscription/'
      path: '/subscription'
      fullPath: '/subscription'
      preLoaderRoute: typeof SubscriptionIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  MembersAttendanceRoute,
  PostsAnnouncementsRoute,
  PostsFaqsRoute,
  StudiesAcceptRoute,
  StudiesApplicationsRoute,
  StudiesApproveRoute,
  StudiesMeRoute,
  SubscriptionFileRoute,
  DashboardIndexRoute,
  MembersIndexRoute,
  MessageIndexRoute,
  StudiesIndexRoute,
  SubscriptionIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/members/attendance",
        "/posts/announcements",
        "/posts/faqs",
        "/studies/accept",
        "/studies/applications",
        "/studies/approve",
        "/studies/me",
        "/subscription/file",
        "/dashboard/",
        "/members/",
        "/message/",
        "/studies/",
        "/subscription/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/members/attendance": {
      "filePath": "members/attendance.tsx"
    },
    "/posts/announcements": {
      "filePath": "posts/announcements.tsx"
    },
    "/posts/faqs": {
      "filePath": "posts/faqs.tsx"
    },
    "/studies/accept": {
      "filePath": "studies/accept.tsx"
    },
    "/studies/applications": {
      "filePath": "studies/applications.tsx"
    },
    "/studies/approve": {
      "filePath": "studies/approve.tsx"
    },
    "/studies/me": {
      "filePath": "studies/me.tsx"
    },
    "/subscription/file": {
      "filePath": "subscription/file.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/members/": {
      "filePath": "members/index.tsx"
    },
    "/message/": {
      "filePath": "message/index.tsx"
    },
    "/studies/": {
      "filePath": "studies/index.tsx"
    },
    "/subscription/": {
      "filePath": "subscription/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
